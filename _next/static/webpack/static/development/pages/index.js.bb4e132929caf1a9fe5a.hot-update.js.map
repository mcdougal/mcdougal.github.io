{"version":3,"file":"static/webpack/static/development/pages/index.js.bb4e132929caf1a9fe5a.hot-update.js","sources":["webpack:///./components/SitePage/SitePage.js"],"sourcesContent":["import AppBar from '@material-ui/core/AppBar';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { makeStyles } from '@material-ui/styles';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { withRouter } from 'next/router';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nimport CodeIcon from 'components/CodeIcon';\nimport HomeIcon from 'components/HomeIcon';\nimport LinkWrapper from 'components/LinkWrapper';\nimport MenuIcon from 'components/MenuIcon';\nimport MusicIcon from 'components/MusicIcon';\nimport VideosIcon from 'components/VideosIcon';\nimport WritingIcon from 'components/WritingIcon';\n\nimport styles from './SitePage.css';\n\nconst IMAGE = `/static/images/headshot.jpg`;\nconst IMAGE_ALT = `Cedric McDougalâ€™s headshot`;\n\nconst FISH_HELMET_240 = `https://cedricmcdougal.s3.us-east-2.amazonaws.com/personal-site/images/fish-helmet-240.png`;\nconst FISH_HELMET_480 = `https://cedricmcdougal.s3.us-east-2.amazonaws.com/personal-site/images/fish-helmet-480.png`;\n\nconst PAGES = [\n  { label: `Code`, href: `/code`, Icon: CodeIcon },\n  { label: `Music`, href: `/music`, Icon: MusicIcon },\n  { label: `Videos`, href: `/videos`, Icon: VideosIcon },\n  { label: `Writing`, href: `/writing`, Icon: WritingIcon },\n];\n\nconst DRAWER = [{ label: `About Me`, href: `/`, Icon: HomeIcon }, ...PAGES];\n\nconst SitePage = ({\n  children,\n  description,\n  favicon,\n  icon,\n  mobileTitle,\n  router,\n  title,\n}) => {\n  const PageIcon = icon;\n  const classes = makeStyles(styles)();\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  const trigger = useScrollTrigger();\n\n  const selectedPage = PAGES.find(({ href }) => {\n    return router.pathname === href;\n  });\n\n  return (\n    <>\n      <CssBaseline />\n      <Head>\n        <title key=\"title\">{title}</title>\n        <meta key=\"description\" name=\"description\" content={description} />\n        <meta key=\"og:type\" property=\"og:type\" content=\"website\" />\n        <meta key=\"og:title\" property=\"og:title\" content={title} />\n        <meta\n          key=\"og:description\"\n          property=\"og:description\"\n          content={description}\n        />\n        <meta key=\"og:image\" property=\"og:image\" content={IMAGE} />\n        <meta key=\"og:image:alt\" property=\"og:image:alt\" content={IMAGE_ALT} />\n        {/* Files from realfavicongenerator.net */}\n        <link\n          rel=\"apple-touch-icon\"\n          sizes=\"180x180\"\n          href={`/static/favicons/${favicon}/apple-touch-icon.png`}\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          sizes=\"32x32\"\n          href={`/static/favicons/${favicon}/favicon-32x32.png`}\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          sizes=\"16x16\"\n          href={`/static/favicons/${favicon}/favicon-16x16.png`}\n        />\n        <link\n          rel=\"manifest\"\n          href={`/static/favicons/${favicon}/site.webmanifest`}\n        />\n        <link\n          rel=\"mask-icon\"\n          href={`/static/favicons/${favicon}/safari-pinned-tab.svg`}\n          color=\"#5bbad5\"\n        />\n        <link\n          rel=\"shortcut icon\"\n          href={`/static/favicons/${favicon}/favicon.ico`}\n        />\n        <meta name=\"msapplication-TileColor\" content=\"#da532c\" />\n        <meta\n          name=\"msapplication-config\"\n          href={`/static/favicons/${favicon}/browserconfig.xml`}\n        />\n      </Head>\n      <Slide appear={false} direction=\"down\" in={!trigger}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <div className={classes.left}>\n              <Link href=\"/\" passHref prefetch>\n                <ButtonBase className={classes.title} component=\"a\" focusRipple>\n                  <PageIcon className={classes.titleIcon} />\n                  <Typography className={classes.titleText} variant=\"h6\">\n                    <span className={classes.desktopTitle}>\n                      Cedric McDougal\n                    </span>\n                    <span className={classes.mobileTitle}>{mobileTitle}</span>\n                  </Typography>\n                </ButtonBase>\n              </Link>\n              <NoSsr>\n                <img\n                  alt=\"Cedric in a hat that looks like an anglerfish\"\n                  className={classes.fishHelmet}\n                  src={FISH_HELMET_480}\n                  srcSet={`${FISH_HELMET_240} 240w, ${FISH_HELMET_480} 480w`}\n                />\n              </NoSsr>\n            </div>\n            <Tabs\n              className={classes.tabs}\n              TabIndicatorProps={{\n                style: { display: `none` },\n              }}\n              value={selectedPage ? selectedPage.href : false}>\n              {PAGES.map(({ label, href }) => {\n                return (\n                  <Tab\n                    key={label}\n                    classes={{\n                      selected: classes.selected,\n                    }}\n                    className={classes.tab}\n                    component={LinkWrapper}\n                    label={\n                      <>\n                        {label}\n                        <div className={classes.underline} />\n                      </>\n                    }\n                    LinkProps={{\n                      href,\n                      passHref: true,\n                      prefetch: true,\n                    }}\n                    value={href}\n                  />\n                );\n              })}\n            </Tabs>\n            <IconButton\n              className={classes.menuButton}\n              onClick={() => {\n                setDrawerIsOpen(true);\n              }}>\n              <MenuIcon IconButton className={classes.menuIcon} />\n            </IconButton>\n            <Drawer\n              anchor=\"right\"\n              onClose={() => {\n                setDrawerIsOpen(false);\n              }}\n              open={drawerIsOpen}>\n              <List className={classes.drawerList}>\n                {DRAWER.map(({ label, href, Icon }) => {\n                  return (\n                    <Link key={label} href={href} passHref prefetch>\n                      <ListItem\n                        button\n                        className={classes.drawerListItem}\n                        component=\"a\">\n                        <ListItemIcon className={classes.drawerListItemIcon}>\n                          <Icon className={classes.drawerListIcon} />\n                        </ListItemIcon>\n                        <ListItemText primary={label} />\n                      </ListItem>\n                    </Link>\n                  );\n                })}\n              </List>\n            </Drawer>\n          </Toolbar>\n        </AppBar>\n      </Slide>\n      <Container maxWidth=\"xl\">\n        <Box mb={8} mt={{ xs: 7, sm: 14 }}>\n          {children}\n          <List className={classes.mobileFooter}>\n            {PAGES.map(({ label, href }) => {\n              return (\n                <ListItem\n                  key={label}\n                  button\n                  component={LinkWrapper}\n                  LinkProps={{\n                    href,\n                    passHref: true,\n                    prefetch: true,\n                  }}\n                  value={href}>\n                  <ListItemText\n                    className={classes.mobileFooterText}\n                    primary={label}\n                  />\n                </ListItem>\n              );\n            })}\n          </List>\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nSitePage.propTypes = {\n  description: PropTypes.string.isRequired,\n  favicon: PropTypes.oneOf([`home`, `code`, `music`, `videos`, `writing`])\n    .isRequired,\n  icon: PropTypes.func.isRequired,\n  mobileTitle: PropTypes.string.isRequired,\n  router: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default withRouter(SitePage);\n"],"mappings":"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","sourceRoot":""}