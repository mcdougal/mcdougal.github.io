{"version":3,"file":"static/webpack/static/development/pages/writing.js.3e323cb0d3a482329b3f.hot-update.js","sources":["webpack:///./components/Media/Media.js"],"sourcesContent":["import ButtonBase from '@material-ui/core/ButtonBase';\nimport { makeStyles } from '@material-ui/styles';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst Media = ({ className, image, ...otherProps }) => {\n  console.log(image);\n  // const classes = makeStyles(() => {\n  //   return {\n  //     loadImage: {},\n  //     mediaBackground: {\n  //       'html.no-webp &$loadImage': {\n  //         backgroundImage: `url('${image.default}')`,\n  //       },\n  //       'html.webp &$loadImage ': {\n  //         backgroundImage: `url('${image.webp}')`,\n  //       },\n  //     },\n  //   };\n  // })();\n  const classes = {};\n\n  const [shouldLoadImage, setShouldLoadImage] = useState(false);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    if (`IntersectionObserver` in window) {\n      const lazyImageObserver = new IntersectionObserver(\n        (entries, observer) => {\n          entries.forEach((entry) => {\n            if (entry.isIntersecting) {\n              setShouldLoadImage(true);\n              observer.unobserve(entry.target);\n            }\n          });\n        }\n      );\n\n      lazyImageObserver.observe(ref.current);\n    } else {\n      setShouldLoadImage(true);\n    }\n  }, []);\n\n  return (\n    <ButtonBase\n      {...otherProps}\n      className={classNames(className, classes.mediaBackground, {\n        [classes.loadImage]: shouldLoadImage,\n      })}\n      ref={ref}\n    />\n  );\n};\n\nMedia.defaultProps = {\n  className: null,\n};\n\nMedia.propTypes = {\n  className: PropTypes.string,\n  image: PropTypes.shape({\n    default: PropTypes.string.isRequired,\n    webp: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Media;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAhBA;AAAA;AAAA;AAAA;AACA;AAiBA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAQA;;;;A","sourceRoot":""}