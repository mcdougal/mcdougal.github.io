{"version":3,"file":"static/webpack/static/development/pages/_app.js.0da040d18594af5202c0.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import '@babel/polyfill';\n\nimport { StylesProvider, ThemeProvider } from '@material-ui/styles';\nimport App, { Container } from 'next/app';\nimport React from 'react';\n\nimport getMuiContext from 'mui/getMuiContext';\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return { pageProps };\n  }\n\n  constructor(props) {\n    super(props);\n    // Material UI SSR strategy: https://github.com/heysailor/material-ui-nextjs\n    this.muiContext = getMuiContext();\n  }\n\n  componentDidMount() {\n    const jssStyles = document.querySelector(`#jss-server-side`);\n\n    if (jssStyles && jssStyles.parentNode) {\n      // Remove the server-side injected CSS\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n\n    // webfontloader throws an error when imported server-side due to usage\n    // of `window`: https://github.com/typekit/webfontloader/issues/383\n    // eslint-disable-next-line global-require\n    const WebFont = require(`webfontloader`);\n\n    // Load fonts asynchronously so they are not render-blocking. The goal is to\n    // deliver the content as quickly as possible.\n    WebFont.load({\n      google: {\n        families: [`Roboto:300,400,500,700`],\n      },\n    });\n  }\n\n  render() {\n    const { Component, pageProps } = this.props;\n\n    return (\n      <Container>\n        <ThemeProvider theme={this.muiContext.theme}>\n          <StylesProvider>\n            <Component muiContext={this.muiContext} {...pageProps} />\n          </StylesProvider>\n        </ThemeProvider>\n      </Container>\n    );\n  }\n}\n\nexport default MyApp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AACA;AACA;AADA;AADA;AAKA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAnDA;AACA;AAqDA;;;;A","sourceRoot":""}